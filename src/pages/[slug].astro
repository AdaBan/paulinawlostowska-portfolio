---
import { marked } from "marked";
import slugify from "slugify";
import { contentfulClient } from "../lib/contentful";
import Layout from "../layouts/Layout.astro";
import "../styles/global.scss";

export async function getStaticPaths() {
  const entries = await contentfulClient.getEntries<any>({
    content_type: "projectPage",
  });

  const projects: any[] = entries.items;

  return projects.map((project, index) => {
    return {
      params: {
        slug: project.fields?.name
          ? slugify(project.fields.name.toLowerCase())
          : "",
      },
      props: {
        project: project.fields,
        parsedDescription: project.fields.description
          ? marked.parse(project.fields.description)
          : "",
      },
    };
  });
}

const { project, parsedDescription } = Astro.props;

const formatDate = (date: string) => new Date(date).toLocaleDateString("en-US");
---

<Layout title={`${project.name} - Paulina Włostowska`}>
  <div class="project">
    <div class="project__gallery">
      <div class="project__gallery-inner">
        {
          project.images.map((image) => (
            <img
              src={`${image.fields.file.url}?h=1200&q=50&fm=webp`}
              alt={image.fields.title}
              loading="lazy"
              height="600"
              style={`aspect-ratio: ${image.fields.file.details.image.width} / ${image.fields.file.details.image.height}`}
            />
          ))
        }
      </div>
    </div>

    <div class="project__details">
      <h1 class="project__title">{project.name}</h1>
      <p>{project.location}</p>
      {
        project.startDate && (
          <time datetime={project.startDate}>
            {formatDate(project.startDate)}
          </time>
        )
      }
      {
        project.endDate && (
          <time datetime={project.endDate}>
            &nbsp;–&nbsp;{formatDate(project.endDate)}
          </time>
        )
      }
    </div>

    <div class="project__description" set:html={parsedDescription} />
  </div>
</Layout>

<style lang="scss">
  .project {
    --slider-padding: 1rem;
    --slider-column-gap: 1rem;

    font-size: 1.5rem;
    padding-bottom: 6rem;

    &__gallery {
      overflow: hidden;

      @media (min-width: 768px) {
        margin-right: -1rem;
      }
    }

    &__gallery-inner {
      display: flex;
      flex-direction: column;
      gap: 1rem;

      > * {
        width: 100%;
        height: auto;
      }

      @media (min-width: 768px) {
        flex-direction: row;
        gap: 0;
        overflow-x: auto;
        scroll-snap-type: x mandatory;
        padding-inline: var(--slider-padding);
        scroll-behavior: smooth;

        list-style-type: none;
        padding: 0;
        margin-right: calc(var(--slider-column-gap) * -1);

        // hide scrollbar
        scrollbar-width: none;

        &::-webkit-scrollbar {
          display: none;
        }

        > * {
          width: auto;
          height: 80vh;
          max-height: 600px;
          flex-shrink: 0;
          flex-grow: 0;
          scroll-snap-align: start;
          scroll-snap-stop: always;
          padding-right: var(--slider-column-gap);
        }
      }
    }

    &__details {
      font-size: 1.5rem;
      padding: 4rem 0 2rem;
    }

    &__title {
      font-size: 3rem;
      margin-bottom: 16px;

      @media (min-width: 768px) {
        font-size: 6rem;
        line-height: 1.1;
        letter-spacing: -0.01em;

        width: 75%;
      }
    }

    &__description {
      max-width: 50ch;
      font-size: 1.25rem;
      font-weight: 400;
    }
  }
</style>
