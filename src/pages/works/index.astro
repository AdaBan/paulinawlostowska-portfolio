---
import { contentfulClient } from "../../lib/contentful";

import Layout from "../../layouts/Layout.astro";
import "../../styles/global.scss";

interface SingleWork {
  name: string;
  title: string;
  color: string;
  thumbnail: any;
  thumbnailAspectRatio: number;
  image: any;
}

interface SingleWorkObject {
  fields: SingleWork;
}

interface WorksPage {
  name: string;
  works: SingleWorkObject[];
}

const entries = await contentfulClient.getEntries<WorksPage>({
  content_type: "worksPage",
  limit: 1,
});

const works: SingleWork[] = entries.items[0].fields.works.map(
  (work: SingleWorkObject) => {
    if (work && work.fields) {
      const thumbnail = work?.fields?.thumbnail
        ? work.fields.thumbnail
        : work?.fields?.image;
      return {
        ...work.fields,
        thumbnail: thumbnail,
        thumbnailAspectRatio:
          thumbnail.fields.file.details.image.width /
          thumbnail.fields.file.details.image.height,
      };
    } else {
      return null;
    }
  }
);
---

<Layout title="Works - Paulina WÅ‚ostowska" transition={true}>
  <div class="container">
    <ul class="works-grid">
      {
        works.map(
          (work, index) =>
            work &&
            work.thumbnail && (
              <li class="work">
                <a
                  class="work__link"
                  href={`/works/${index + 1}`}
                  style={`aspect-ratio: ${work.thumbnail.fields.file.details.image.width} / ${work.thumbnail.fields.file.details.image.height}`}
                >
                  <img
                    src={`${
                      work.thumbnail.fields.file.url
                    }?h=${400}&q=72&fm=webp`}
                    width={280 * work.thumbnailAspectRatio}
                    height={280}
                    alt={work.thumbnail.fields.title}
                    loading="lazy"
                  />
                </a>
              </li>
            )
        )
      }
    </ul>
  </div>
</Layout>

<style lang="scss">
  .works-grid {
    display: flex;
    flex-direction: column;
    gap: 1rem;

    @media (min-width: 768px) {
      flex-direction: row;
      flex-wrap: wrap;
      gap: 2rem;
    }
  }

  .work {
    position: relative;
    width: auto;
    cursor: pointer;
    color: var(--accent-color);

    &__link {
      position: relative;
      z-index: 1;
      display: block;
      // height: max(280px, 15vw);
      width: 100%;
      overflow: hidden;

      @media (min-width: 560px) {
        height: max(200px, 15vw);
        width: auto;
      }
    }

    img {
      width: 100%;
      height: 100%;
      object-fit: cover;
      object-position: center;
      transform-origin: center;
      transition: 0.5s ease;
    }

    @media (hover: hover) {
      &:hover {
        img {
          transform: scale(1.1);
        }
      }
    }
  }
</style>
